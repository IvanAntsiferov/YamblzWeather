import groovy.json.JsonSlurper

def fileName = 'app-credentials.json'
def appStorePassword = (new JsonSlurper().parseText(file(fileName).text)).storePassword
def appKeyAlias = (new JsonSlurper().parseText(file(fileName).text)).keyAlias
def appKeyPassword = (new JsonSlurper().parseText(file(fileName).text)).keyPassword

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {

    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.ringov.yamblzweather"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 6
        versionName "0.5.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    signingConfigs {

        release {
            storeFile file('weather_key.jks')
            keyAlias appKeyAlias
            keyPassword appKeyPassword
            storePassword appStorePassword
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        buildTypes.each {
            it.buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/data/2.5/"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

ext {
    espressoVersion = '2.2.2'
    junitVersion = '4.12'
    leakCanaryVersion = '1.5.1'
    mockitoVersion = '2.7.22'
    junitVersion = '4.12'

    supportLibVersion = '25.3.1'
    architectureComponentsVersion = '1.0.0-alpha5'

    butterknifeVersion = '8.7.0'
    daggerVersion = '2.11'
    retrofitVersion = '2.3.0'
    rxJavaVersion = '2.1.1'
    rxAndroidVersion = '2.0.1'
    rxBindingVersion = '2.0.0'
    androidJobVersion = '1.1.11'
    timberVersion = '4.5.1'
    glideVersion = '4.0.0'
}

dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espressoVersion}") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
    }

    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"

    //leak canary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // Support lib
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"

    // architecture components
    compile "android.arch.lifecycle:runtime:$architectureComponentsVersion"
    compile "android.arch.lifecycle:extensions:$architectureComponentsVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$architectureComponentsVersion"
    compile "android.arch.persistence.room:runtime:$architectureComponentsVersion"
    compile "android.arch.persistence.room:rxjava2:$architectureComponentsVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$architectureComponentsVersion"

    // butter-knife
    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // dagger 2
    compile "com.google.dagger:dagger:$daggerVersion"
    compile "com.google.dagger:dagger-android:$daggerVersion"
    compile "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"

    // retrofit 2
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:3.8.1"

    // rx
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compile "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBindingVersion"

    // Logging
    compile "com.jakewharton.timber:timber:$timberVersion"

    // Images
    compile "com.github.bumptech.glide:glide:$glideVersion"
}
